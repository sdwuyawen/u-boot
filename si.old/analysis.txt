#ifndef CONFIG_SPL_BUILD
	/*
	 * fix .rel.dyn relocations
	 */
	ldr	r0, _TEXT_BASE		/* r0 <- Text base */
	//r0 = 0,代码段基地址
	
	sub	r9, r6, r0		/* r9 <- relocation offset */
	//r9 = r6 - r0 = 0x33f40000 - 0 = 0x33f40000
	//偏移值 = 目的地址 - 源地址(链接时确定的地址)
	
	ldr	r10, _dynsym_start_ofs	/* r10 <- sym table ofs */
	//r10 = 0x00074470
	
	add	r10, r10, r0		/* r10 <- sym table in FLASH */
	//r10 = 0x00074470 + 0 = 0x00074470
	
	ldr	r2, _rel_dyn_start_ofs	/* r2 <- rel dyn start ofs */
	//r2 = 0x0006c390
	
	add	r2, r2, r0		/* r2 <- rel dyn start in FLASH */
	//r2 = 0x0006c390 + 0 = 0x0006c390
	
	ldr	r3, _rel_dyn_end_ofs	/* r3 <- rel dyn end ofs */
	//r3 = 0x00074470
	
	add	r3, r3, r0		/* r3 <- rel dyn end in FLASH */
	//r3 = 0x00074470
	
fixloop:
	ldr	r0, [r2]		/* r0 <- location to fix up, IN FLASH! */
	1. r0=[0x0006c390]=0x00000020
	
	add	r0, r0, r9		/* r0 <- location to fix up in RAM */
	1. r0=r0+r9=0x00000020 + 0x33f40000 = 0x33f40020
	
	ldr	r1, [r2, #4]
	1. r1=[0x0006c390+4]=0x00000017
	
	and	r7, r1, #0xff
	1. r7=r1&0xff=0x00000017
	
	cmp	r7, #23			/* relative fixup? */
	1. r7 == 23(0x17)
	
	beq	fixrel
	cmp	r7, #2			/* absolute fixup? */
	beq	fixabs
	/* ignore unknown type of fixup */
	b	fixnext
fixabs:
	/* absolute fix: set location to (offset) symbol value */
	mov	r1, r1, LSR #4		/* r1 <- symbol index in .dynsym */
	add	r1, r10, r1		/* r1 <- address of symbol in table */
	ldr	r1, [r1, #4]		/* r1 <- symbol value */
	add	r1, r1, r9		/* r1 <- relocated sym addr */
	b	fixnext
fixrel:
	/* relative fix: increase location by offset */
	ldr	r1, [r0]
	1. r1=[0x00000020]	?????为什么不是0x33f40020????
	
	add	r1, r1, r9
	1. r1=r1+r9=0x000001e0+ 0x33f40000 = 0x33f401e0
	
fixnext:
	str	r1, [r0]
	1. [0x33f40020] = 0x33f401e0
	
	add	r2, r2, #8		/* each rel.dyn entry is 8 bytes */
	1. r2=r2+8=0x0006c390 + 8 = 0x0006c398
	
	cmp	r2, r3
	1. 
	
	blo	fixloop
#endif
